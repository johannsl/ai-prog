Goal: 
    >Separate the code into a core and a exercice specific part. 
    >The core should contain the basic general A* algorithm, while the specific part should contain the GUI, the input manager, and the exercice specifics. 
    >The input dialogue can be run in command line, but each shortest path problem should be run in a GUI window. 
    >The window could have buttons for best-first, depth-first, and breadth-first; And when all of these have run, comparisons should be printed in the terminal. 
    >The GUI should use squares, circles, and three colors pluss black and white.

Problems: 
    >How does the A* core communicate with the GUI? 
    >How general should the A* core be?

Optimize A*:

First test, map 0:

['SUCCESS: path found']
0:00:00.007054
['SUCCESS: path found']
0:00:00.004955
['SUCCESS: path found']
0:00:00.003868
['SUCCESS: path found']
0:00:00.003563
['SUCCESS: path found']
0:00:00.003613
['SUCCESS: path found']
0:00:00.003575
['SUCCESS: path found']
0:00:00.003491
['SUCCESS: path found']
0:00:00.003802
['SUCCESS: path found']
0:00:00.003629
['SUCCESS: path found']
0:00:00.003435

set max nodes generated. optimalize a*. create retracepath for every iteration.
